version: "3"

networks:
    app-network:
        driver: bridge

services:
    nginx:
        image: nginx:stable-alpine
        container_name: ${DOCKER_APP_NAME:-project}-nginx-test
        restart: unless-stopped
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
            - ./storage/logs/nginx:/var/log/nginx/
        ports:
            - "${DOCKER_NGINX_PORT:-80}:80"
        depends_on:
            - app
        environment:
            TZ: ${DOCKER_WORKSPACE_TIMEZONE:-UTC}
        networks:
            - app-network

    app:
        image: app
        container_name: ${DOCKER_APP_NAME:-project}-app-test
        hostname: app-service
        build:
          args:
            user: Dram
            uid: 1000
          context: ./docker/php
          dockerfile: Dockerfile
        restart: unless-stopped
        environment:
            PHP_IDE_CONFIG: "serverName=Docker"
        extra_hosts:
            - host.docker.internal:host-gateway
        volumes:
            - ./:/var/www:cached
        networks:
            - app-network
        command: bash -c "php artisan migrate --force && php-fpm"

    mysql:
        image: mysql:5.7
        container_name: ${DOCKER_APP_NAME:-project}-mysql-test
        ports:
            - "${DOCKER_MYSQL_PORT:-3306}:3306"
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        volumes:
            - ./mysql:/var/lib/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - app-network
        command: ["--sql-mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"]


    redis:
        image: 'redis:alpine'
        container_name: ${DOCKER_APP_NAME:-project}-redis-test
        restart: unless-stopped
        ports:
            - "${DOCKER_REDIS_PORT:-6379}:6379"
        environment:
            TZ: ${DOCKER_WORKSPACE_TIMEZONE:-UTC}
        volumes:
            - ${DOCKER_REDIS_STORAGE:-../docker/redis/data}:/var/lib/redis:cached
        networks:
            - app-network
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]